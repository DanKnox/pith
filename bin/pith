#! /usr/bin/env ruby

require "rubygems"
require "optparse"
require "pathname"

$input_dir = Pathname(".")

BANNER = <<EOF
usage: pith [OPTIONS] [COMMAND]

  Commands: (default: "build")

    build       Generate the website into OUTPUT_DIR.

    serve       Serve the website via HTTP, re-generating as required.

EOF

OptionParser.new do |opts|
  opts.banner = BANNER
  opts.separator "  Options:"
  opts.on("-i", "--input INPUT_DIR", 'Input directory', '  (default: ".")') do |dir|
    $input_dir = Pathname(dir)
  end
  opts.on("-o", "--output OUTPUT_DIR", 'Output directory', '  (default: "INPUT_DIR/_out")') do |dir|
    $output_dir = Pathname(dir)
  end
  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end.parse!

unless $output_dir
  $output_dir = $input_dir + "_out"
  puts %{Generating to "#{$output_dir}"}
end

$: << File.expand_path("../../lib", __FILE__)

require "pith/project"
require "pith/console_logger"

@project = Pith::Project.new(:input_dir => $input_dir, :output_dir => $output_dir)
@project.logger = Pith::ConsoleLogger.new

def build
  @project.build
end

def serve
  require "pith/server"
  port = 4321
  puts %{Taking the Pith at "http://localhost:#{port}"}
  Pith::Server.run(@project, :Port => port)
end

action = ARGV.shift || "build"
self.send(action)
